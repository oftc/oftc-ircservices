0 English
NS_HELP_SHORT
	%s: Shows this help.
NS_HELP_LONG
	Shows this help message.  Use HELP command for help with a command.
NS_HELP_REG_SHORT
	%s: Registers a nickname for your usage.
NS_HELP_REG_LONG
	Usage: REGISTER password e-mail
	
	Registers a nickname in our database for your use.  Registering your nickname
	ensures it is reserved for your use and cannot be used by others if you do
	not wish them to use it.  It also allows you to associate various pieces of
	information with your nickname and also to have access to registered
	channels.
	
	Choose a password that you can remember but is not easily guessed.
	
	The e-mail address you enter will be used in case you forget your password,
	so make sure it is valid and correct.
	
	Once your nickname is registered, see HELP SET for information on settings
	that can be set on it.
	
	Some services operations require nicknames to be VERIFIED.  To verify
	your nick, go to https://services.oftc.net/, log in with your NickServ
	password, and follow the instructions there.
NS_HELP_ID_SHORT
	%s: Identify your nickname.
NS_HELP_ID_LONG
	Usage: IDENTIFY password [nick]
	
	Identify that you are the owner of the nick you are currently using.
	If you specify a nickname to identify against, your IRC nick will
	automatically be changed to the one you identify for.
	
	See also: REGISTER
NS_HELP_DROP_SHORT
	%s: Releases your nickname for use.
NS_HELP_DROP_LONG
	Usage: DROP [auth-code]
	
	Releases your nickname for use and deletes it from the database.
	This cannot be undone.  You will be asked to confirm this action by following
	the instructions given.  If you already have a confirmation auth code, supply
	it as a parameter.  Releasing your nickname in this way will allow others to
	make use of it, or register it for their use, so make sure you really want
	this before confirming.
NS_HELP_DROPNICK_SHORT
	%s: Releases the nickname for use.
NS_HELP_DROPNICK_LONG
	Usage: DROPNICK nickname
	
	Releases the specified nickname for use and deletes it from the database.
	This cannot be undone. Releasing a nickname in this way will allow others to
	make use of it, or register it for their use, so make sure you really want
	this.
NS_HELP_CHECKVERIFY_SHORT
	%s: Sets +R if you recently verified your nickname.
NS_HELP_CHECKVERIFY_LONG
	Usage: CHECKVERIFY
	
	Checks the database to determine whether or not your nickname is verified.
	If it is and you are not currently mode +R, sets +R.
NS_HELP_ACCESS_SHORT
	%s: Maintains the nickname ACCESS list.
NS_HELP_ACCESS_LONG
	Usage: ACCESS ADD mask
	       ACCESS DEL mask
	       ACCESS LIST
	
	Maintains the nickname access list.  If your IRC userhost matches an entry
	in your access list, you will not receive notices asking you to identify
	when you connect, and your nickname will not be changed even if you have
	ENFORCE set.  Additionally, if SECURE is set to OFF, you will be
	automatically identified to your nickname without having to use the
	IDENTIFY command.
	
	Examples:
	    ACCESS ADD foo@*.org
	    ACCESS DEL foo@*.org
	    ACCESS LIST
	
	The following are valid options to this command:
NS_HELP_ACCESS_ADD_SHORT
	%s
NS_HELP_ACCESS_ADD_LONG
	Usage: ACCESS ADD mask
	
	Add an access entry to your access list.  If your IRC userhost matches this
	entry, you will not receive notices asking you to identify when you
	connect, and your nickname will not be changed even if you have ENFORCE
	set.  Additionally, if SECURE is set to OFF, you will be automatically
	identified to your nickname without having to use the IDENTIFY command.
	
	Example:
	    ACCESS ADD foo@*.org
NS_HELP_ACCESS_LIST_SHORT
	%s
NS_HELP_ACCESS_LIST_LONG
	Usage: ACCESS LIST
	
	List entries in your access list.
	
	Example:
	    ACCESS LIST
NS_HELP_ACCESS_DEL_SHORT
	%s
NS_HELP_ACCESS_DEL_LONG
	Usage: ACCESS DEL mask
	
	Delete an entry from your access list.
	
	Examples:
	    ACCESS DEL foo@*.org
NS_HELP_CERT_SHORT
	%s: Maintains the nickname client certificate list.
NS_HELP_CERT_LONG
	Usage: CERT ADD fingerprint
	       CERT DEL fingerprint
	       CERT LIST
	
	Maintains the nickname client certificate list.  If you connect to IRC with
	SSL, and provide the client certificate with a fingerprint on your
	certificate list  you will be automatically identified to your nickname
	without having to use the IDENTIFY command.
	
	Examples:
	    CERT ADD 994EB294C15F4EE647FB5A426C11444E697B1814
	    CERT DEL 994EB294C15F4EE647FB5A426C11444E697B1814
	    CERT LIST
	
	The following are valid options to this command:
NS_HELP_CERT_ADD_SHORT
	%s
NS_HELP_CERT_ADD_LONG
	Usage: CERT ADD [fingerprint [nickname]]
	
	Add an access entry to your client certificate list.  If you connect to IRC with
	SSL, and provide the client certificate with a fingerprint on your
	certificate list you will be automatically identified to your nickname
	without having to use the IDENTIFY command.  If you are currently connected
	via SSL and have provided a valid client certificate, you may omit the
	fingerprint parameter.
	
	If you specify a nickname to add this fingerprint to, when you connect to
	the network, providing this fingerprint, you will automatically be
	identified to your account, and services will change your nickname to that
	nickname.  The nickname you specify must be one linked to your account.
	
	Examples:
	    CERT ADD
	    CERT ADD testnick
	    CERT ADD 994EB294C15F4EE647FB5A426C11444E697B1814
	    CERT ADD 994EB294C15F4EE647FB5A426C11444E697B1814 testnick
NS_HELP_CERT_LIST_SHORT
	%s
NS_HELP_CERT_LIST_LONG
	Usage: CERT LIST
	
	List entries in your client certificate list.
	
	Example:
	    CERT LIST
NS_HELP_CERT_DEL_SHORT
	%s
NS_HELP_CERT_DEL_LONG
	Usage: CERT DEL mask
	
	Delete an entry from your client certificate list.
	
	Examples:
	    CERT DEL 994EB294C15F4EE647FB5A426C11444E697B1814
	
NS_HELP_AJOIN_SHORT
	%s: Maintains the nickname auto join list.
NS_HELP_AJOIN_LONG
	Usage: AJOIN ADD #channel
	       AJOIN DEL #channel
	       AJOIN LIST
	
	Maintains the nickname auto join list.  Channels in this list will be
	automatically joined by your client every time you identify with services.
	Channels must be registered with channel services to be able to be added to
	the list.
	
	Examples:
	    AJOIN ADD #test
	    AJOIN DEL #test
	    AJOIN LIST
	
	The following are valid options to this command:
NS_HELP_AJOIN_ADD_SHORT
	%s
NS_HELP_AJOIN_ADD_LONG
	Usage: AJOIN ADD #channel
	
	Add a channel to the auto join list.  The channel must be registered with
	channel services but does not necessarily need to currently exist on the
	network.
	
	Examples:
	    AJOIN ADD #test
NS_HELP_AJOIN_LIST_SHORT
	%s
NS_HELP_AJOIN_LIST_LONG
	Usage: AJOIN LIST
	
	List entries in your auto join list.
	
	Example:
	    AJOIN LIST
NS_HELP_AJOIN_DEL_SHORT
	%s
NS_HELP_AJOIN_DEL_LONG
	Usage: AJOIN DEL #channel
	
	Delete an entry from your auto join list.
	
	Examples:
	    AJOIN DEL #test
NS_HELP_SET_SHORT
	%s: Set nickname properties.
NS_HELP_SET_LONG
	Usage: SET property value
	
	Set nickname properties.  The various properties are shown below.  Use
	HELP SET property to get help on the individual properties.
NS_HELP_SET_LANG_SHORT
	%s
NS_HELP_SET_LANG_LONG
	Usage: SET LANGUAGE [language id]
	
	SET the language services will communicate to you in.  To see the list of
	available translations execute SET LANGUAGE with no parameters.  The default
	language is English.
	
	Examples:
	    SET LANGUAGE
	    SET LANGUAGE 11
NS_HELP_SET_PASS_SHORT
	%s
NS_HELP_SET_PASS_LONG
	Usage: SET PASSWORD password
	
	SET the password of your current account.  Please choose a password which you
	can remember but is not easily guessed.
	
	Example:
	    SET PASSWORD foobar
NS_HELP_SET_URL_SHORT
	%s
NS_HELP_SET_URL_LONG
	Usage: SET URL [url|-]
	
	SET URL field to be shown in the INFO command.  Specify '-' (without the
	quotes) to remove your URL.
	
	Examples:
	    SET URL http://example.com
	    SET URL -
NS_HELP_SET_EMAIL_SHORT
	%s
NS_HELP_SET_EMAIL_LONG
	Usage: SET EMAIL [email]
	
	SET e-mail field to be used for password recovery.  E-mail addresses are
	shown in the INFO command if PRIVATE is turned off.
	
	Example:
	    SET EMAIL foo@example.com
NS_HELP_SET_ENFORCE_SHORT
	%s
NS_HELP_SET_ENFORCE_LONG
	Usage: SET ENFORCE [ON|OFF]
	
	ENFORCE enables or disables nickname enforcement of your account.  This means
	that if someone who is not not on your access list attempts to use your
	nickname and doesn't identify within a given period their nick will be
	forcefully changed.
	
	Examples:
	    SET ENFORCE ON
	    SET ENFORCE OFF
	
	See Also:
	    HELP SET SECURE
NS_HELP_SET_SECURE_SHORT
	%s
NS_HELP_SET_SECURE_LONG
	Usage: SET SECURE [ON|OFF]
	
	SECURE enables or disables nickname security.  If SECURE is off, when you
	change to your nickname you will be automatically identified if your userhost
	matches an entry in your access list.  If secure is on, you will not be
	automatically identified, but you will not have your nickname changed by the
	ENFORCE option.
	
	Examples:
	    SET SECURE ON
	    SET SECURE OFF
	
	See Also:
	    HELP SET ENFORCE
	    HELP ACCESS
NS_HELP_SET_CLOAK_SHORT
	%s
NS_HELP_SET_CLOAK_LONG
	Usage: SET CLOAK [ON|OFF]
	
	CLOAK enables or disables a cloak on your current account.  If your account
	has a cloak set on it, when cloak is enabled your hostname will be changed
	to the cloak when you identify (or are automatically identified) to services.
	
	Examples:
	    SET CLOAK ON
	    SET CLOAK OFF
NS_HELP_CLOAKSTRING_SHORT
	%s: Sets the cloak string for a nickname.
NS_HELP_CLOAKSTRING_LONG
	Usage: CLOAKSTRING nick [cloakstring|-]
	
	Sets or displays the cloak on the account of the specified nickname.
	This command is restricted to services admins.  Specify '-' (without the
	quotes) to unset the cloak string.
	
	Examples:
	    CLOAKSTRING example_user user.example.org
	    CLOAKSTRING example_user -
	
	See Also:
	    HELP SET CLOAK
NS_HELP_SET_MASTER_SHORT
	%s
NS_HELP_SET_MASTER_LONG
	Usage: SET MASTER [nickname]
	
	Sets the master nickname of this account.  The master nickname is the one
	that will display in services displays such as access lists.
	
	Example:
	    SET MASTER foobar
	
	See Also:
	    HELP LINK
	    HELP ENSLAVE
NS_HELP_SET_PRIVATE_SHORT
	%s
NS_HELP_SET_PRIVATE_LONG
	Usage SET PRIVATE [ON|OFF]
	
	Enables the private flag on your nickname which prevents your e-mail address
	being shown in an INFO request, and also prevents your nickname showing in a
	LIST.
NS_HELP_LINK_SHORT
	%s: Link this nickname to a master nickname.
NS_HELP_LINK_LONG
	Usage: LINK master_nickname [password]
	
	Link this nickname to a master nickname.  This effectively creates an alias
	for your nickname to the master nickname.  When you change to this nickname
	you will be checked against the master nickname access list and the master
	nickname's settings will be applied to you.  To identify for this nickname
	after linking it, you will need to use the master nickname password.  If you
	are connecting via SSL and your client certificate fingerprint matches a
	fingerprint on the list of the master nickname, you do not need to specify a
	password.
	
	Both the master and the slave must already be REGISTERed for this command
	to succeed.
	
	See also: HELP UNLINK
	          HELP ENSLAVE
	          HELP SET MASTER
NS_HELP_ENSLAVE_SHORT
	%s: Enslave a nickname to this master nickname.
NS_HELP_ENSLAVE_LONG
	Usage: ENSLAVE slave_nickname [password]
	
	Link the specified nickname to your master nickname.  This is the reverse
	process of the LINK command.  You issue it on a nickname you want linked to
	your current nickname.  Your current nickname will be the master nickname
	and the nickname you specify will be the child or slave nickname.  If you
	are connecting via SSL and your client certificate fingerprint matches a
	fingerprint on the list of the specified nickname, you do not need to
	specify a password.
	
	Both the master and the slave must already be REGISTERed for this command
	to succeed.
	
	See also: HELP LINK
	          HELP UNLINK
	          HELP SET MASTER
NS_HELP_UNLINK_SHORT
	%s: Unlink this nickname from a master nickname.
NS_HELP_UNLINK_LONG
	Usage: UNLINK
	
	Unlink this nickname from a master nickname.  This removes the link from the
	master nickname and reverts this nickname to be a standalone nickname with
	all the settings it had (including password) before it was linked.
NS_HELP_REGAIN_SHORT
	%s: Release your nickname for you to use.
NS_HELP_REGAIN_LONG
	Usage: REGAIN nickname [password]
	
	If your nickname is being held by services, as is the case if your nickname
	has been enforced recently, this command will release the hold and change
	your nickname to the nickname that you specify.  This command will also
	free up your nickname if another user is using it and will change your
	current nickname to be your registered nickname if successful.
NS_HELP_FORBID_SHORT
	%s: Forbid a nickname from being used.
NS_HELP_FORBID_LONG
	Usage: FORBID nickname
	
	Adds the nickname specified to the forbidden nickname list, preventing it to
	be used.  Forbidden nicknames may not be registered and anyone attempting to
	use them will be forced to change their nickname.
	
	See also: UNFORBID
NS_HELP_UNFORBID_SHORT
	%s: Remove a nickname from the forbidden list.
NS_HELP_UNFORBID_LONG
	Usage: UNFORBID nickname
	
	Remove a nickname from the forbidden list.
NS_HELP_INFO_SHORT
	%s: Get information on a nickname.
NS_HELP_INFO_LONG
	Usage: INFO [nickname]
	
	Displays all the information that services knows about a nickname, or your
	nickname if no nickname is specified.  Settings will only be shown if this
	nickname is yours, or is linked to yours, or if you are a services admin.
	E-mail addresses are not shown for PRIVATE accounts.
NS_HELP_SENDPASS_SHORT
	%s: Send a password reset request.
NS_HELP_SENDPASS_LONG
	Usage: SENDPASS nickname [auth-code newpassword]
	
	Sends a password reset request to the e-mail address registered on this
	account.  This e-mail will contain an authentication code which you will need
	to supply to complete the password reset process.  If you have specified such
	code, and it is valid, your password will be reset to the password you
	specify.
NS_HELP_SUDO_SHORT
	%s: Execute a command as another user.
NS_HELP_SUDO_LONG
	Usage: SUDO nickname command
	
	This will execute the specified commands as if you are the user that you
	specify, including taking on their access level.  This command should be used
	with extreme care and caution and only if absolutely necessary.  Changing
	other users settings maliciously is impolite at best.  It can also cause harm
	to your own nickname if you execute it on a command that does not make
	sense (REGISTER, IDENTIFY etc).  This command is restricted to services
	admins.
NS_HELP_LIST_SHORT
	%s: Shows a list of nicknames matching a specified pattern.
NS_HELP_LIST_LONG
	Usage: LIST pattern [FORBID]
	
	Shows a list of nicknames which are registered and match the pattern
	specified.  If you specify FORBID, only forbidden nicknames will be shown.
	The forbid option is restricted to IRC Operators.  Results will be limited to
	50 matches, so try to be specific with your pattern.
NS_HELP_STATUS_SHORT
	%s: Shows the identified status of a nickname
NS_HELP_STATUS_LONG
	Usage: STATUS nick
	
	Shows the identified status of a nickname, determining if they were identified
	via password, access list, SSL cert or otherwise.
NS_HELP_RESETPASS_SHORT
	%s: Reset a password for a given nickname
NS_HELP_RESETPASS_LONG
	Usage: RESETPASS nick
	
	Reset a password for the given nickname, if successful the new password will
	be replied to you.
NS_ALREADY_REG
	Nickname %s is already registered.  If this is your nickname you may try
	IDENTIFY instead.  If this is not your nickname then it may have been
	registered by someone else first.  Please choose another nickname and try
	again, or if you believe this nickname to be unused, contact network
	support.
NS_REG_COMPLETE
	Nickname %s has been registered successfully and is now yours to use.
	See HELP SET for information on settings that you can set on your new
	nickname.  If you change nickname or reconnect to the IRC network you will be
	required to identify using the password you chose when you registered.  See
	HELP IDENTIFY for more information on identifying your nickname.
	
	Some services operations require nicknames to be VERIFIED.  To verify
	your nick, go to https://services.oftc.net/, log in with your NickServ
	password, and follow the instructions there.
NS_REG_FAIL
	Nickname %s failed to register.  This is usually caused by an internal
	problem within services or a database problem.  Please try again in a short
	while.  If this is not the first time you have received this message, please
	contact network support.
NS_REG_FAIL_TOOSHORT
	The nick you are trying to register is too short, please choose another nick
	to complete your registration.
NS_REG_FIRST
	Nickname %s is not registered.  The nickname you specify must be a
	registered nickname.  See HELP REGISTER for more information.
	
	If you believe this to be incorrect, there could be a database problem;
	contact network support if this problem persists.
NS_NICKFORBID
	This nickname (%s) is on the forbidden list and may not be registered or
	used in any services commands.
NS_IDENTIFIED
	You are successfully identified as %s.
NS_IDENTIFY_ACCESS
	This hostname matches an entry on the access list of nickname %s.  You
	have been automatically identified.
NS_IDENTIFY_CERT
	You are connected using SSL and have provided a matching client certificate
	for nickname %s.  You have been automatically identified.
NS_IDENT_FAIL
	Identify failed as %s.  You may have entered an incorrect password.
	
	If you have forgotten your password please see HELP SENDPASS
	
	If you believe you have entered the correct password and are still getting
	this message, please contact network support.
NS_CURR_LANGUAGE
	Current language is %s (%d).
NS_AVAIL_LANGUAGE
	Available languages are:
NS_LANGUAGE_SET
	Language set to %s (%d).
NS_LANGUAGE_UNAVAIL
	That language is invalid or not available.
NS_SET_SUCCESS
	SET %s to %s.
NS_SET_PASS_SUCCESS
	Password successfully changed.
NS_SET_FAILED
	Failed to SET %s to %s.  This may be an internal problem, please try
	again later.  If this is not the first time you have seen this message please
	contact network support.
NS_SET_PASS_FAILED
	Password change failed.
NS_SET_VALUE
	%s is SET to: %s.
NS_NEED_IDENTIFY
	You need to identify to nickname services before you can execute this
	command.  See HELP IDENTIFY for more information.
NS_NICK_DROPPED
	Nickname %s has been dropped.  It is now free to be registered by other
	users.
NS_DROP_AUTH
	If you are sure you wish to drop this nickname then type /msg %s DROP %d:%s
NS_DROP_AUTH_FAIL
	The auth code you supplied is invalid or has expired.  Nickname %s NOT
	dropped.  This may be an internal error, please try again later.  If this is
	not the first time you have seen this message, please contact network
	support.
NS_NICK_DROPFAIL
	DROP failed on nickname %s.  This may have been an internal error, please
	try again shortly.  If this is not the first time you have seen this message
	please contact network support.
NS_DROP_FAIL_MASTERLESS
	Unable to DROP nickname %s.  Channel %s would be left with no
	masters.  Drop this channel first, or assign someone else as master.
NS_ACCESS_ADD
	ACCESS list entry %s added.
NS_ACCESS_ADDFAIL
	Failed to add ACCESS list entry %s.  This may have been an internal error,
	please try again shortly.  If this is not the first time you have seen this
	message please contact network support.
NS_ACCESS_INVALID
	ACCESS list entry %s is not a userhost (user@host).  Please try again with
	a valid user@host address.
NS_ACCESS_START
	ACCESS list:
NS_ACCESS_ENTRY
	%d  %s
NS_ACCESS_LIST_NONE
	Your ACCESS list is empty and contains no entries.
NS_ACCESS_DEL
	ACCESS entry %s deleted.
NS_ACCESS_DEL_NONE
	%s was not found on the ACCESS list.
NS_ACCESS_DEL_ERROR
	An error occured attempting to delete the ACCESS list entry.  Please try
	again.  If this is not the first time you have seen this message please
	contact network support.
NS_AJOIN_INVALID_CHAN
	Channel name %s is invalid.  Channel names must begin with '#'.
NS_AJOIN_CHAN_NOT_REG
	Channel %s is not registered with channel services.  Unable to add
	auto join entries for channels that are not registered.
NS_AJOIN_ADD
	AJOIN entry %s has been added.
NS_AJOIN_ADDFAIL
	AJOIN entry %s failed to be added.  This may have been an internal error,
	please try again shortly.  If this is not the first time you have seen this
	message please contact network support.
NS_AJOIN_START
	AJOIN list:
NS_AJOIN_ENTRY
	%d   %s
NS_AJOIN_LIST_NONE
	Your AJOIN list is empty and contains no entries.
NS_AJOIN_DEL
	AJOIN entry %s deleted.
NS_AJOIN_DEL_NONE
	%s was not found on the AJOIN list.
NS_AJOIN_DEL_ERROR
	An error occured attempting to delete the AJOIN entry.  Please try again.
	If this is not the first time you have seen this message please contact
	network support.
NS_CERT_ADD
	CERT list entry %s added to nickname %s.
NS_CERT_ADDFAIL
	Failed to add CERT list entry %s to nickname %s.  This may have been 
	an internal error, please try again shortly.  If this is not the first time 
	you have seen this message please contact network support.
NS_CERT_ADDFAIL_NONICK
	Failed to add CERT list entry because %s is not registered.
NS_CERT_ADDFAIL_NOTYOURNICK
	Failed to add CERT list entry because %s is not registered by you.
NS_CERT_INVALID
	CERT list entry %s is not a valid fingerprint.  Please try again with
	a valid fingerprint.  Fingerprints may only contain the letters a-z and the
	numbers 0-9.
NS_CERT_YOUHAVENONE
	You are not connected via SSL or have not provided a valid client
	certificate.  You must provide a fingerprint to add.
NS_CERT_EXISTS
	Certificate fingerprint %s is already added to your account.
NS_CERT_START
	CERT list:
NS_CERT_ENTRY
	%d  %s  %s
NS_CERT_EMPTY
	No certificates found.
NS_CERT_DEL
	%s removed from the CERT list.
NS_CERT_DEL_NONE
	%s was not found on the CERT list.
NS_CERT_DEL_ERROR
	An error occurred attempting to modify the CERT list.  If this is not the
	first time you have seen this message, please contact network support.
NS_REGAIN_SUCCESS
	REGAIN succeed on nickname %s.  You have been changed to your nickname.
NS_REGAIN_FAILED
	REGAIN failed on nickname %s.  You may have given an incorrect password.
	If you believe this to be incorrect please contact network support.
NS_REGAIN_FAILED_SECURITY
	Access Denied.  Either you are not on the access list for this nickname, or
	it has SECURE set on it.  If you believe this to be incorrect please contact
	network support.
NS_REGAIN_NOTONLINE
	%s is not online.  The nickname may be freely used and does not
	require regain or ghost.
NS_LINK_NOMASTER
	Master nickname %s not registered.  The nickname you want to link to must
	be registered with nickname services.
NS_LINK_NOSLAVE
	Slave nickname %s not registered.  The nickname you want to link to must
	be registered with nickname services.
NS_LINK_BADPASS
	Incorrect password for master nickname %s.  You must supply the correct
	password for the master nickname in order to link to it.
NS_LINK_NOSELF
	This nickname is already linked to that master.  You may not link a nickname
	which is already linked to a master.  If you wish to do this, you will need
	to UNLINK one of the nicknames first.
NS_LINK_FAIL
	LINK failed to master %s.  This may have been an internal error, please
	try again shortly.  If this is not the first time you have seen this
	message please contact network support.
NS_LINK_NOTVERIFIED
	Linking failed.  To link nicknames, both %s and %s and must be
	verified.  See HELP REGISTER for details.
NS_LINK_OK
	Nickname %s is now linked to master %s.
NS_UNLINK_FAILED
	Nickname %s failed to unlink.
NS_UNLINK_OK
	Nickname %s is now unlinked.
NS_UNLINK_NOLINK
	Nickname %s is not linked.  You cannot unlink a nickname which does not
	contain a link in the first place.
NS_INFO_START
	Nickname information for %s (%s)
NS_INFO
	  Last quit message: %s
	          Last host: %s
	                URL: %s
	       Cloak string: %s
NS_INFO_MASTER
	The master nickname for this account is %s.
NS_INFO_REGTIME_FULL
	    Time registered: %s (%dy %dm %dd %02d:%02d:%02d ago)
NS_INFO_REGTIME_NOYEAR
	    Time registered: %s (%dm %dd %02d:%02d:%02d ago)
NS_INFO_REGTIME_NOMONTH
	    Time registered: %s (%dd %02d:%02d:%02d ago)
NS_INFO_REGTIME_NODAY
	    Time registered: %s (%02d:%02d:%02d ago)
NS_INFO_REGTIME_UNKNOWN
	    Time registered: Unknown
NS_INFO_QUITTIME_FULL
	  Account last quit: %s (%dy %dm %dd %02d:%02d:%02d ago)
NS_INFO_QUITTIME_NOYEAR
	  Account last quit: %s (%dm %dd %02d:%02d:%02d ago)
NS_INFO_QUITTIME_NOMONTH
	  Account last quit: %s (%dd %02d:%02d:%02d ago)
NS_INFO_QUITTIME_NODAY
	  Account last quit: %s (%02d:%02d:%02d ago)
NS_INFO_QUITTIME_UNKNOWN
	  Account last quit: Unknown
NS_INFO_SEENTIME_FULL
	 Nickname last seen: %s (%dy %dm %dd %02d:%02d:%02d ago)
NS_INFO_SEENTIME_NOYEAR
	 Nickname last seen: %s (%dm %dd %02d:%02d:%02d ago)
NS_INFO_SEENTIME_NOMONTH
	 Nickname last seen: %s (%dd %02d:%02d:%02d ago)
NS_INFO_SEENTIME_NODAY
	 Nickname last seen: %s (%02d:%02d:%02d ago)
NS_INFO_SEENTIME_UNKNOWN
	 Nickname last seen: Unknown
NS_INFO_LANGUAGE
	           Language: %s (%d)
NS_INFO_EMAIL
	     E-mail address: %s
NS_INFO_ONLINE
	%s is currently online from nick %s
NS_INFO_ONLINE_NONICK
	%s is currently online
NS_INFO_OPTION
	%19s: %s
NS_INFO_LINKS
	The following nicks are linked in to this account: %s
NS_INFO_CHANS
	This nick is on the following channel access lists:
NS_INFO_CHAN
	  %20s: %s
NS_INFO_GROUPS
	This nick is on the following groups:
NS_INFO_GROUP
	  %20s: %s
NS_NICK_IN_USE
	This nickname is registered and protected.  If it is your nickname, you may
	authenticate yourself to services with the IDENTIFY command.  You are
	getting this message because you are not on the access list for the
	%s nickname.
NS_NICK_IN_USE_IWILLCHANGE
	This nickname is registered and protected.  If it is your nickname, you may
	authenticate yourself to services with the IDENTIFY command.  If you do
	not authenticate or change your nickname, I will change your nickname.  You
	are getting this notice because you are not on the access list for the %s
	nickname.
NS_NICK_FORBID_IWILLCHANGE
	This nickname, %s, may not be used.  Choose another or I will forcefully
	change your nickname.
NS_FORBID_OK
	%s has been forbidden and may now not be used.
NS_FORBID_FAIL
	%s failed to be forbidden.
NS_FORBID_BAD_DURATIONCHAR
	Invalid duration character, '%c'.
NS_NOREG_GUEST
	Guest nicknames are reserved for services use and may not be registered.
	Please change your nickname and try again.
NS_NOREG_FORBID
	%s is forbidden and may not be registered or used.  Please change your
	nickname and try again.
NS_INVALID_EMAIL
	%s is not a valid e-mail address.  Please use a valid e-mail address so
	that you may recover your password should you forget it.  Your e-mail will
	only be used to confirm limited services actions (such as requesting a new
	password if you forget your current one).
NS_LANG_LIST
	%d : %s
NS_MASTER_NOT_LINKED
	%s is not linked to your nickname.  You may not set a master nickname
	which is not linked to this one.
NS_MASTER_SET_OK
	Master nickname set to %s.  This nickname will now show in services lists
	such as access lists.
NS_MASTER_SET_FAIL
	Failed to set master nickname to %s.
NS_UNFORBID_NOT_FORBID
	Nickname %s is not forbidden so cannot be removed from the forbid list.
NS_UNFORBID_OK
	Nickname %s removed from forbidden list and may now be used again.
NS_UNFORBID_FAIL
	Nickname %s could not be removed from the forbidden list.
NS_SENDPASS_SENT
	This is a two stage process; instructions on the second stage have been
	e-mailed to the e-mail address listed on the account.
NS_SENDPASS_NEED_PASS
	You must specify a new password to be set on the account.
NS_SENDPASS_AUTH_FAIL
	The auth code you provided is either invalid or has expired.  Password has
	not been reset.
NS_NO_SENDPASS_YET
	This account or the e-mail address on this account has already had a mail
	sent to it.  Please respond to that mail.  If you feel this is incorrect,
	contact network support.
NS_SENDPASS_SUBJECT
	OFTC Nickname password reset request
NS_SENDPASS_BODY
	Hi %s,
	
	Someone (hopefully you) matching the IRC userhost %s!%s@%s requested that the
	NickServ password on the addressed nickname (%s) be reset.
	
	If this is you, go back to IRC and issue the following command to
	complete the process:
	
	/msg %s SENDPASS %s %ld:%s <yournewpassword>
	
	If this was not you, please do not be concerned, no action has been
	taken on your nickname.  If you think you have received this message in
	error, please forward this message to support@oftc.net.  Do not reply
	to this mail as it is sent from an unattended address.
	
	Kind regards,
	
	OFTC IRC Nickname Services
NS_LIST_INVALID_OPTION
	Invalid LIST option %s.
NS_LIST_NO_MATCHES
	No matches were found which matched the pattern %s.
NS_LIST_ENTRY
	%s
NS_LIST_END
	End of LIST.  %d matches found.
NS_INVALID_CLOAK
	The cloak string %s is invalid.
NS_STATUS_SSL
	4 (online, identified by SSL certificate)
NS_STATUS_ACCESS
	3 (online, identified by access list)
NS_STATUS_PASS
	2 (online, identified by password)
NS_STATUS_NOTREG
	1 (online, not identified)
NS_STATUS_OFFLINE
	0 (not online)
NS_RESETPASS_FAIL
	Failed to reset to a random password
NS_RESETPASS_SUCCESS
	Successfully reset password for %s to %s
NS_CHECKVERIFY_FAIL
	To set +R, your nick must be registered and verified.
NS_CHECKVERIFY_SUCCESS
	Successfully set +R on your nick.
NS_CHECKVERIFY_ALREADY
	You're already verified.
