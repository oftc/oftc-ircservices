/* etc/example.conf - services configuration file example
 *
 * $Id$
 */

servicesinfo {
	/* name: the name of services */
	name = "services.ircnetwork.com";

	/* description: the description of services.  '[' and ']' may not
	 * be used here for compatibility with older servers.
	 */
	description = "ircnetwork.com's IRC services"

  /* sid: the server id used on TS6 servers */
  sid = "AA3";

	/* vhost: the IP to bind to when we connect outward to ipv4 servers.
	 * This should be an ipv4 IP only.
	 */
	#vhost = "192.169.0.1";

	/* vhost6: the IP to bind to when we connect outward to ipv6 servers.
	 * This should be an ipv6 IP only.
	 */
	#vhost6 = "3ffe:80e8:546::2";

	/*
	 * For the next two options, following these steps to make
	 * the key and cert files that you'll need:
 	 * 
        * dd if=/dev/urandom of=random1 count=512
        * dd if=/dev/urandom of=random2 count=512
        * dd if=/dev/urandom of=random3 count=512
        * dd if=/dev/urandom of=random4 count=512
        * openssl genrsa -des3 -rand random1:random2:random3:random4 \ 
                -out rsa.key 2048
        * rm random1 random2 random3 random4
        * openssl rsa -in rsa.key -out rsa.pem
        * rm rsa.key
        * openssl rsa -in rsa.pem -pubout -out rsa.pub
        * openssl req -new -key rsa.pem -out server.csr
        * openssl x509 -req -days 9999 -in server.csr -signkey rsa.pem \ 
                -out server.crt
        * rm server.csr
        *
        * Use rsa.pem for the rsa_private_key_file, and server.crt
        * for the ssl_certificate_file.  The rsa.pub is used for server
        * linking.
        */
	/* rsa key: the path to the file containing our rsa key for cryptlink.
 	 */
 	#rsa_private_key_file = "/usr/local/services/etc/rsa.pem";
	
	/* SSL certificate file, used for client SSL connections
	 */
	#ssl_certificate_file = "/usr/local/services/etc/server.crt";
};

database
{
  /* The libdbi driver to use - mysql, pgsql, sqlite etc */
  driver = "mysql";

  /* The database name to use */
  dbname = "database";

  /* Login credentials */
  username = "user";
  password = "pass";
};

connect
{
  /* Name of remote server to connect to */
  name = "irc.foo.bar";
  /* Hostname of the server to connect to(can be an ip) */
  host = "foo.server.bar";
  /* Port number for the connection *?
  port = 6668;

  /* Flags for this connection.  Available values:
  crypt = this link is a crypt link - must set up the other encryption options
  zip   = this link is a compressed link. */
  flags = crypt, zip;

  /* The protocol handler to use for this link - hybrid, hybridts6, dalnet etc
   */
  protocol = hybridts6;
};

service
{
  name = "NickServ";
  module = "nickserv.so";
};
